@page "/fetchdata"
@inject HttpClient Http

<h3>Posts</h3>

@code {
    // Declare a variable to hold the API response
    private List<Post>? posts;

    // Define the data model for handling API response
    public class Post
    {
        public int Id { get; set; }
        public string? Title { get; set; }
        public string? Body { get; set; }
    }
}
// Fetch data from the API when the component is initialized
    protected override async Task OnInitializedAsync()
    {
        // Use HttpClient to call the API endpoint and fetch the data
        posts = await Http.GetFromJsonAsync<List<Post>>("https://jsonplaceholder.typicode.com/posts");
    }
@if (posts is null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table>
        <thead>
            <tr>
                <th>Post ID</th>
                <th>Title</th>
                <th>Body</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var post in posts)
            {
                <tr>
                    <td>@post.Id</td>
                    <td>@post.Title</td>
                    <td>@post.Body</td>
                </tr>
            }
        </tbody>
    </table>
}
protected override async Task OnInitializedAsync()
{
    try
    {
        posts = await Http.GetFromJsonAsync<List<Post>>("https://jsonplaceholder.typicode.com/posts");
    }
    catch (Exception ex)
    {
        Console.WriteLine($"Error fetching data: {ex.Message}");
        posts = null; // Optional: Set to null to handle rendering conditions.
    }
}
